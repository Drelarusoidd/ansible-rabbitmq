---

- name: import rabbitmq main key
  become: true
  shell: 'curl -1sLf "https://keys.openpgp.org/vks/v1/by-fingerprint/0A9AF2115F4687BD29803A206B73A36E6026DFCA" | sudo gpg --dearmor | sudo tee /usr/share/keyrings/com.rabbitmq.team.gpg > /dev/null'

- name: import cloudsmith key
  become: true
  shell: 'curl -1sLf https://dl.cloudsmith.io/public/rabbitmq/rabbitmq-erlang/gpg.E495BB49CC4BBE5B.key | sudo gpg --dearmor | sudo tee /usr/share/keyrings/io.cloudsmith.rabbitmq.E495BB49CC4BBE5B.gpg > /dev/null'

- name: import packagecloud key
  become: true
  shell: 'curl -1sLf https://dl.cloudsmith.io/public/rabbitmq/rabbitmq-server/gpg.9F4587F226208342.key | sudo gpg --dearmor | sudo tee /usr/share/keyrings/io.cloudsmith.rabbitmq.9F4587F226208342.gpg > /dev/null'

- name: render sources list template
  become: true
  template:
    src: rabbitmq.list.j2
    dest: /etc/apt/sources.list.d/rabbitmq.list

- name: Install Erlang & Rabbitmq
  become: true
  apt:
    update_cache: yes
    package:
      - erlang-base
      - erlang-asn1
      - erlang-crypto
      - erlang-eldap
      - erlang-ftp
      - erlang-inets
      - erlang-mnesia
      - erlang-os-mon
      - erlang-parsetools
      - erlang-public-key
      - erlang-runtime-tools
      - erlang-snmp
      - erlang-ssl
      - erlang-syntax-tools
      - erlang-tftp
      - erlang-tools
      - erlang-xmerl

      - rabbitmq-server
    state: present

- name: Ensure RabbitMQ is running
  become: true
  service:
    name: rabbitmq-server
    state: started

- name: Ensure the users is removed
  become: true
  community.rabbitmq.rabbitmq_user:
    user: "{{item}}"
    state: absent
  with_items: "{{rabbitmq_users_remove}}"

- name: Ensure the vhosts is present
  become: true
  community.rabbitmq.rabbitmq_vhost:
    name: "{{item}}"
  with_items: "{{rabbitmq_vhosts}}"

- name: Ensure the users is present
  become: true
  community.rabbitmq.rabbitmq_user:
    user: "{{item.user}}"
    password: "{{item.password}}"
    configure_priv: "{{item.configure_priv|default('.*')}}"
    read_priv: "{{item.read_priv|default('.*')}}"
    write_priv: "{{item.write_priv|default('.*')}}"
    vhost: "{{item.vhost|default('/')}}"
    tags: "{{item.tags|default('')}}"
  with_items: "{{rabbitmq_users}}"

- name: Symlink RabbitMQ sbin to bin
  become: true
  file:
    state: link
    src: "/usr/sbin/{{ item }}"
    dest: "/usr/bin/{{ item }}"
  with_items:
    - rabbitmq-diagnostics
    - rabbitmq-plugins
    - rabbitmq-queues
    - rabbitmq-server
    - rabbitmq-upgrade
    - rabbitmqctl

- name: Enable the plugins is installed
  become: true
  community.rabbitmq.rabbitmq_plugin:
    names: "{{item}}"
    state: enabled
    prefix: /usr
  with_items: "{{rabbitmq_plugins}}"
  notify:
    - rabbitmq restart

- name: Ensure rabbitmq directory exists
  become: yes
  file:
    path: /etc/rabbitmq
    state: directory
    owner: rabbitmq
    group: rabbitmq

- name: Generate the configuration of rabbitmq
  become: true
  template:
    src: rabbitmq.config.j2
    dest: /etc/rabbitmq/rabbitmq.config
    owner: rabbitmq
    group: rabbitmq
    mode: 0644
    backup: yes
  notify: rabbitmq restart
